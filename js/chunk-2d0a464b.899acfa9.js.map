{"version":3,"sources":["webpack:///./src/views/field/view/NewFieldSurveyAskWrite.vue","webpack:///./src/views/field/model/NewFieldSurveyAskModel.js","webpack:///./src/views/field/viewModel/NewFieldSurveyAskViewModel.js","webpack:///./src/views/field/view/NewFieldSurveyAskWrite.vue?b6b6"],"names":["class","viewModel","newFieldSurveyAskView","item","index","key","foldTitle","foldRight","foldRightItem","foldRightIndex","componentName","btnSize","btnStyle","text","onClickBtnFunction","isCustom","customName","onAddManager","foldDataList","foldData","foldDataIndex","model","managerInfoList","managerInfo","managerIndex","placeholder","value","managerName","managerPhone","onDeleteManager","title","isEssential","unit","disabled","isInValidate","newFieldSurveyAskCompelete","NewFieldSurvayAskModel","this","fieldName","fieldAddress","fieldOpenDate","surveyDate","ceoName","ceoPhone","obj","NewFieldSurveyAskViewModel","halfAlign","validateDataList","NewFieldSurveyAskModel","console","log","JSON","parse","stringify","getData","store","dispatch","push","ManagerInfoModel","deleteItem","filter","isValidated","forEach","validateData","name","components","PageWithLayout","BoxCheckbox","Input","InputSelectNumber","InputUnit","Sticky","Button","data","beforeMount","setModel","computed","validated","methods","valueView","length","type","dataList","valueDataList","includes","id","map","join","find","addCommaForMoney","render"],"mappings":"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","file":"js/chunk-2d0a464b.899acfa9.js","sourcesContent":["<template>\r\n  <PageWithLayout>\r\n    <div class=\"section_comm\">\r\n      <div class=\"head_section no_border\">\r\n        <h3 class=\"tit_section\">신축 답사 요청</h3>\r\n      </div>\r\n      <div class=\"body_section no_border no_padding\">\r\n        <div class=\"inner_field_body\">\r\n            <div class=\"area_fold\" \r\n              v-for=\"(item, index) in viewModel.newFieldSurveyAskView\"\r\n              :key=\"index\">\r\n              <div class=\"head_fold\">\r\n                <strong class=\"tit_fold\">{{ item.foldTitle }}</strong>\r\n                <div v-if=\"item.foldRight\" class=\"area_right\">\r\n                  <template\r\n                    v-for=\"(foldRightItem, foldRightIndex) in item.foldRight\"\r\n                    :key=\"foldRightIndex\">\r\n                    <component\r\n                      v-if=\"foldRightItem.componentName == 'Button'\"\r\n                      :is=\"foldRightItem.componentName\"\r\n                      :btnSize=\"foldRightItem.btnSize\"\r\n                      :btnStyle=\"foldRightItem.btnStyle\"\r\n                      :text=\"foldRightItem.text\"\r\n                      @onClickBtn=\"foldRightItem.onClickBtnFunction()\">\r\n                    </component>\r\n                    <Button\r\n                      v-if=\"foldRightItem.isCustom && foldRightItem.customName == 'managerAddBtn'\"\r\n                      btnSize=\"small\"\r\n                      btnStyle=\"secondary\"\r\n                      text=\"실무자추가\"\r\n                      @onClickBtn=\"viewModel.onAddManager()\" />\r\n                  </template>\r\n                </div>\r\n              </div>\r\n              <div class=\"body_fold\">\r\n                <template\r\n                    v-for=\"(foldData, foldDataIndex) in item.foldDataList\"\r\n                    :key=\"foldDataIndex\">\r\n                  <dl\r\n                    v-if=\"!foldData.isCustom\"\r\n                    :class=\"['list_table list_table_w']\">\r\n                    <dt>{{ foldData.title }}<span v-if=\"foldData.isEssential\" class=\"ico_zippro ico_star\">필수항목</span></dt>\r\n                    <dd>\r\n                      <component\r\n                        v-if=\"foldData.componentName == 'Input' || 'InputUnit' || 'InputSelectNumber'\"\r\n                        :is=\"foldData.componentName\"\r\n                        :unit=\"foldData.unit\"\r\n                        :placeholder=\"foldData.placeholder\"\r\n                        v-model:value=\"viewModel.model[foldData.value]\">\r\n                      </component>\r\n                    </dd>\r\n                    <!-- <dd v-else>{{ valueView(item) }}</dd> -->\r\n                  </dl>\r\n                  <template v-else>\r\n                    <template\r\n                      v-for=\"( managerInfo, managerIndex ) in viewModel.model.managerInfoList\"\r\n                      :key=\"managerIndex\">\r\n                      <div :class=\"['group_table',{ 'group_table_button' : managerIndex > 0}]\">\r\n                        <strong class=\"tit_group\">실무자{{ managerIndex+1 }}</strong>\r\n                        <dl class=\"list_table list_table_w\">\r\n                          <dt>이름</dt>\r\n                          <dd>\r\n                            <Input\r\n                              :placeholder=\"`실무자${managerIndex+1} 이름을 입력해주세요`\"\r\n                              v-model:value=\"managerInfo.managerName\" />\r\n                          </dd>\r\n                        </dl>\r\n                        <dl class=\"list_table list_table_w\">\r\n                          <dt>연락처</dt>\r\n                          <dd>\r\n                            <Input\r\n                              placeholder=\"- 없이 입력\"\r\n                              v-model:value=\"managerInfo.managerPhone\" />\r\n                          </dd>\r\n                        </dl>\r\n                        <div v-if=\"managerIndex > 0\" class=\"area_right\">\r\n                          <Button\r\n                            btnSize=\"small\"\r\n                            btnStyle=\"tertiary\"\r\n                            text=\"삭제\"\r\n                            @onClickBtn=\"viewModel.onDeleteManager(managerInfo)\" />\r\n                        </div>\r\n                      </div>\r\n                    </template>\r\n                  </template>\r\n                </template>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Sticky>\r\n      <div class=\"area_right\">\r\n        <Button\r\n          btnSize=\"large\"\r\n          btnStyle=\"primary\"\r\n          text=\"완료\"\r\n          :disabled=\"isInValidate\"\r\n          @onClickBtn=\"viewModel.newFieldSurveyAskCompelete()\" />\r\n      </div>\r\n    </Sticky>\r\n  </PageWithLayout>\r\n</template>\r\n\r\n<script>\r\nimport PageWithLayout from '@/components/layout/PageWithLayout';\r\nimport BoxCheckbox from '@/components/common/checkbox/BoxCheckbox';\r\nimport Input from '@/components/common/input/Input';\r\nimport InputSelectNumber from '@/components/common/input/InputSelectNumber';\r\nimport InputUnit from '@/components/common/input/InputUnit';\r\nimport Sticky from \"@/components/common/sticky/Sticky\";\r\nimport Button from '@/components/common/button/Button';\r\n// viewModel\r\nimport NewFieldSurveyAskViewModel from '@/views/field/viewModel/NewFieldSurveyAskViewModel';\r\n\r\nexport default {\r\n  name:'NewFieldSurveyAskWrite',\r\n  components:{\r\n    PageWithLayout,\r\n    BoxCheckbox,\r\n    Input,\r\n    InputSelectNumber,\r\n    InputUnit,\r\n    Sticky,\r\n    Button\r\n  },\r\n  data(){\r\n    return{\r\n      viewModel: new NewFieldSurveyAskViewModel(),\r\n    }\r\n  },\r\n  beforeMount(){\r\n    this.viewModel.setModel();\r\n  },\r\n  computed:{\r\n    isInValidate(){\r\n      return !this.viewModel.validated();\r\n    }\r\n  },\r\n  methods:{\r\n    valueView(item){\r\n      var value = this.viewModel.model[item.value];\r\n      if(!value || value.length == 0) return '-';\r\n      const type = typeof(value);\r\n      if( item.dataList ){\r\n        var dataList = JSON.parse(JSON.stringify(this.viewModel.[item.dataList]));\r\n        if(type != 'string'){\r\n          value = JSON.parse(JSON.stringify(value));\r\n          const valueDataList = dataList.filter(item => value.includes(item.id)).map(item => item.text);\r\n          return valueDataList.join(', ');\r\n        }else{\r\n          return dataList.find(item => item.id == value).text;\r\n        }\r\n      }\r\n      switch(type){\r\n        case 'string':{\r\n          return `${value}${item.unit ? item.unit : ''}`;\r\n        }\r\n        case 'number':{\r\n          return `${addCommaForMoney(value)}${item.unit ? item.unit : ''}`;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>","export default class  NewFieldSurvayAskModel {\r\n  constructor() {\r\n    this.fieldName = ''; // 현장이름\r\n    this.fieldAddress = ''; // 주소\r\n    this.fieldOpenDate = ''; // 현장오픈예정일\r\n    this.surveyDate = ''; // 답사예정일\r\n    this.ceoName = ''; // 대표자 이름\r\n    this.ceoPhone = ''; // 대표자 전화번호\r\n    this.managerInfoList = []; // 실무자 리스트\r\n  }\r\n\r\n  getData(){\r\n    let obj = {\r\n      fieldName : this.fieldName,\r\n      fieldAddress : this.fieldAddress,\r\n      fieldOpenDate : this.fieldOpenDate,\r\n      surveyDate : this.surveyDate,\r\n      ceoName : this.ceoName,\r\n      ceoPhone : this.ceoPhone,\r\n      managerInfoList : this.managerInfoList,\r\n    }\r\n    return obj;\r\n  }\r\n}","import NewFieldSurveyAskModel from '@/views/field/model/NewFieldSurveyAskModel';\r\nimport ManagerInfoModel from '@/views/field/model/ManagerInfoModel';\r\n\r\nimport { store } from '@/store';\r\n\r\nexport default class NewFieldSurveyAskViewModel {\r\n  constructor() {\r\n    this.model = {};\r\n\r\n    // 신축답사요청 화면 구성\r\n    this.newFieldSurveyAskView = [\r\n      {\r\n        foldTitle:'현장정보',\r\n        foldDataList : [\r\n          { \r\n            title: '현장이름',\r\n            componentName:'Input',\r\n            value: 'fieldName',\r\n            placeholder:'현장이름을 입력해주세요',\r\n            isEssential: true\r\n          },\r\n          { \r\n            title: '주소',\r\n            componentName:'Input',\r\n            value: 'fieldAddress',\r\n            placeholder:'검색할 주소를 입력해주세요',\r\n            isEssential: true\r\n          },\r\n          { \r\n            title: '현장 오픈 예정일',\r\n            componentName:'Input',\r\n            value: 'fieldOpenDate',\r\n            placeholder:'현장 오픈 예정일을 선택해주세요',\r\n            isEssential: true,\r\n          },\r\n          { \r\n            title: '답사 예정일',\r\n            componentName:'Input',\r\n            value: 'surveyDate',\r\n            placeholder:'답사 예정일을 선택해주세요',\r\n            isEssential: true,\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        foldTitle:'분양팀 정보',\r\n        foldRight:[\r\n          { // 실무자 추가 버튼\r\n            isCustom: true,\r\n            customName:'managerAddBtn',\r\n          }\r\n        ],\r\n        foldDataList: [\r\n          { \r\n            title: '대표자 이름',\r\n            componentName:'Input',\r\n            value: 'ceoName',\r\n            placeholder:'대표자 이름을 입력해주세요',\r\n            isEssential: false,\r\n            halfAlign:'l',\r\n          },\r\n          { \r\n            title: '대표자 연락처',\r\n            componentName:'Input',\r\n            value: 'ceoPhone',\r\n            placeholder:'- 없이 입력',\r\n            isEssential: false,\r\n            halfAlign:'r',\r\n          },\r\n          { // 실무자 데이터\r\n            isCustom: true,\r\n            customName:'managerInfoDataList',\r\n          },\r\n        ]\r\n      }\r\n    ];\r\n\r\n    this.validateDataList = [ 'fieldName', 'fieldAddress', 'fieldOpenDate', 'surveyDate' ];\r\n  }\r\n\r\n  setModel(){\r\n    this.model = new NewFieldSurveyAskModel();\r\n    this.onAddManager();\r\n  }\r\n\r\n  newFieldSurveyAskCompelete(){\r\n    console.log('%c 신축답사요청 API POST',\"color:green;font-size:16px\");\r\n    console.log(JSON.parse(JSON.stringify(this.model.getData())));\r\n    store.dispatch('START_TOAST_ACTION', '신축 답사가 요청되었습니다');\r\n  }\r\n\r\n  onAddManager(){\r\n    this.model.managerInfoList.push(new ManagerInfoModel());\r\n  }\r\n\r\n  onDeleteManager(deleteItem){\r\n    this.model.managerInfoList = this.model.managerInfoList.filter(item => item != deleteItem);\r\n  }\r\n\r\n  // (공통) 검증\r\n  validated(){\r\n    // 검증 내역이 없을 시\r\n    if(!this.validateDataList) return true;\r\n    let isValidated = true;\r\n    // 각 step별 검증내역 데이터 유무 검증\r\n    this.validateDataList.forEach(validateData => {\r\n      if(!this.model[validateData]){\r\n        isValidated = false;\r\n        return false;\r\n      }\r\n    });\r\n    return isValidated;\r\n  }\r\n\r\n}\r\n","import { render } from \"./NewFieldSurveyAskWrite.vue?vue&type=template&id=ae2d619c\"\nimport script from \"./NewFieldSurveyAskWrite.vue?vue&type=script&lang=js\"\nexport * from \"./NewFieldSurveyAskWrite.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}